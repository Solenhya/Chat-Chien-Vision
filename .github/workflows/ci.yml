name: CI

on:
  workflow_dispatch: # Pour le dÃ©clanchement manuel
  push:
    branches: [ main]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: test_actions
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Create .env file #C'est pas beau mais c'est + rapide
      run: |
        echo "VOLUMES=${{ secrets.VOLUMES }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
        echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env        

    - name: Build and start services
      run: |
        docker compose up -d --build
    - name: Install les librairies de test
      run: |
        docker compose exec -T app_chat_chien pip install -r requirements/dev.txt

    - name: Run tests inside app container #Via python car pytest pas dans le path et -s car il n'a pas acces au standard in and out
      run: |
        docker compose exec -T app_chat_chien python -m pytest -s
    
    - name: Shut down services
      if: always()
      run: docker compose down -v

